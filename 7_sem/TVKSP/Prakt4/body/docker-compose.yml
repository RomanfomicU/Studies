services:
  app:
    container_name: test-app
    build:
      context: ./prakt4
      dockerfile: Dockerfile
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/test
      DB_USERNAME: postgres
      DB_PASSWORD: root
      GRAYLOG_URL: http://graylog:12201
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: on-failure

  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRESQL_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD:-root}
      POSTGRES_DB: test
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - postgres-logs:/var/log/postgresql
    command:
      - -c
      - config_file=/etc/postgresql/postgresql.conf
    ports:
      - "5435:5432"
    restart: on-failure

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_URI: postgres:5432/test?sslmode=disable
      DATA_SOURCE_USER: ${POSTGRESQL_USERNAME:-postgres}
      DATA_SOURCE_PASS: ${POSTGRESQL_PASSWORD:-root}
    ports:
      - "9187:9187"
    depends_on:
      - postgres

  pg-graylogger:
    image: ghcr.io/rabotaru/pg-graylogger:0.10.3
    volumes:
      - postgres-logs:/var/log/postgresql
    command:
      - -graylog-address
      - graylog:12201
    depends_on:
      - graylog

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  adminer:
    image: adminer
    ports:
      - "8081:8080"

  zabbix-server:
    image: zabbix/zabbix-server-pgsql
    ports:
      - "10051:10051"
    environment:
      DB_SERVER_HOST: postgres
      POSTGRES_USER: ${POSTGRESQL_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD:-root}
    depends_on:
      - postgres

  zabbix-web:
    image: zabbix/zabbix-web-apache-pgsql
    ports:
      - "8082:8080"
    environment:
      DB_SERVER_HOST: postgres
      POSTGRES_USER: ${POSTGRESQL_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD:-root}
      ZBX_SERVER_HOST: zabbix-server
    depends_on:
      - postgres
      - zabbix-server

  zabbix-agent:
    image: zabbix/zabbix-agent
    environment:
      ZBX_SERVER_PORT: 10051
      ZBX_SERVER_HOST: zabbix-server
    depends_on:
      - zabbix-server

  graylog:
    image: graylog/graylog:6.0.6
    environment:
      GRAYLOG_PASSWORD_SECRET: somepasswordpepper
      GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      GRAYLOG_HTTP_EXTERNAL_URI: "http://127.0.0.1:9000/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    ports:
      - "9000:9000"
      - "12201:12201/udp"
      - "1514:1514"
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    links:
      - mongodb:mongo
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch

  mongodb:
    image: mongo

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

volumes:
    postgres-logs: